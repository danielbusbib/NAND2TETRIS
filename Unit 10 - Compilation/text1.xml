<class>
<identifier> Class </identifier>
<identifier> Bar </identifier>
<symbol> { </symbol>
<subroutineDec>
<keyword> method </keyword>
<identifier> Fraction </identifier>
<identifier> foo </identifier>
<symbol> ( </symbol>
<parameterList>
<keyword> int </keyword>
<identifier> y </identifier>
</parameterList>
<symbol> ) </symbol>
<subroutineBody>
<symbol> { </symbol>
<varDec>
<keyword> var </keyword>
<keyword> int </keyword>
<identifier> temp </identifier>
<symbol> ; </symbol>
</varDec>
<statements>
<letStatement>
<keyword> let </keyword>
<identifier> temp </identifier>
<symbol> = </symbol>
<expression>
<term>
<symbol> ( </symbol>
<expression>
<term>
<identifier> xxx </identifier>
</term>
<symbol> + </symbol>
<term>
<integerConstant> 12 </integerConstant>
</term>
</expression>
<symbol> ) </symbol>
</term>
<symbol> * </symbol>
<term>
<symbol> - </symbol>
<term>
<integerConstant> 63 </integerConstant>
</term>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
<letStatement>
<keyword> let </keyword>
<identifier> length </identifier>
<symbol> = </symbol>
<expression>
<term>
<identifier> Keyboard </identifier>
<symbol> . </symbol>
<identifier> readInt </identifier>
<symbol> ( </symbol>
<expressionList>
<expression>
<term>
<string_const> "HOW MANY NUMBERS? " </string_const>
</term>
</expression>
</expressionList>
<symbol> ) </symbol>
</term>
</expression>
<symbol> ; </symbol>
</letStatement>
</statements>
<symbol> } </symbol>
</subroutineBody>
</subroutineDec>
<symbol> } </symbol>
</class>
